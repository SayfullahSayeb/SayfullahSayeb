<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Github on Sayfullah Sayeb</title>
    <link>//localhost:1313/tags/github/</link>
    <description>Recent content in Github on Sayfullah Sayeb</description>
    <image>
      <title>Sayfullah Sayeb</title>
      <url>//localhost:1313/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>//localhost:1313/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.142.0</generator>
    <language>en</language>
    <lastBuildDate>Sun, 08 Dec 2024 03:12:00 +0600</lastBuildDate>
    <atom:link href="//localhost:1313/tags/github/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Optimized command lineup for typical Git workflows used in every project</title>
      <link>//localhost:1313/2024/12/optimized-command-lineup-for-typical.html</link>
      <pubDate>Sun, 08 Dec 2024 03:12:00 +0600</pubDate>
      <guid>//localhost:1313/2024/12/optimized-command-lineup-for-typical.html</guid>
      <description>&lt;h3 id=&#34;set-up-git-and-initialize-repository&#34;&gt;&lt;strong&gt;Set Up Git and Initialize Repository&lt;/strong&gt;&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;

\# Set your Git username and email

`git config --global user.name &amp;#34;Your Name&amp;#34; git config --global user.email &amp;#34;your_email@example.com&amp;#34;  # Initialize a Git repository (if not already done) git init  # Add all files to the staging area git add .  # Commit the initial files git commit -m &amp;#34;Initial commit&amp;#34;  # Add your GitHub repository as a remote git remote add origin https://github.com/&amp;lt;your-username&amp;gt;/&amp;lt;your-repo-name&amp;gt;.git  # Push your code to the main branch git push -u origin main` 
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;create-and-work-on-a-new-branch&#34;&gt;&lt;strong&gt;Create and Work on a New Branch&lt;/strong&gt;&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;

`# Create and switch to a new branch git checkout -b &amp;lt;branch-name&amp;gt;  # Add all files and commit changes git add . git commit -m &amp;#34;Your commit message&amp;#34;  # Push the branch to the remote repository git push -u origin &amp;lt;branch-name&amp;gt;`
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;merge-branch-into-main&#34;&gt;&lt;strong&gt;Merge Branch into Main&lt;/strong&gt;&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;

`# Switch to the main branch git checkout main  # Merge the feature branch into main git merge &amp;lt;branch-name&amp;gt; -m &amp;#34;Merge &amp;lt;branch-name&amp;gt; into main&amp;#34;  # Push the merged changes to the remote repository git push origin main`
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;pull-latest-changes-from-main&#34;&gt;&lt;strong&gt;Pull Latest Changes from Main&lt;/strong&gt;&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;

`# Pull the latest changes from the remote repository git pull origin main`
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;clean-up&#34;&gt;&lt;strong&gt;Clean Up&lt;/strong&gt;&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;

`# Delete a branch locally after merging git branch -d &amp;lt;branch-name&amp;gt;  # Delete a branch remotely git push origin --delete &amp;lt;branch-name&amp;gt;`
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;rollback-to-last-commit&#34;&gt;&lt;strong&gt;Rollback to Last Commit&lt;/strong&gt;&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;

`# Discard changes to a specific file git checkout -- &amp;lt;filename&amp;gt;  # Discard all uncommitted changes git reset --hard  # If needed, reset to a specific commit git reset --hard &amp;lt;commit-hash&amp;gt;`
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;add-gitignore-for-ignoring-files&#34;&gt;&lt;strong&gt;Add &lt;code&gt;.gitignore&lt;/code&gt; for Ignoring Files&lt;/strong&gt;&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;

`# Create a .gitignore file touch .gitignore  # Example entries for a .gitignore file echo &amp;#34;node_modules/&amp;#34; &amp;gt;&amp;gt; .gitignore echo &amp;#34;.env&amp;#34; &amp;gt;&amp;gt; .gitignore echo &amp;#34;dist/&amp;#34; &amp;gt;&amp;gt; .gitignore  # Add and commit the .gitignore file git add .gitignore git commit -m &amp;#34;Add .gitignore&amp;#34;`
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;one-liner-setup-for-a-new-repository&#34;&gt;&lt;strong&gt;One-Liner Setup for a New Repository&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;For a fresh project setup, this single block of commands can be used:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Git and GitHub Documentation</title>
      <link>//localhost:1313/2024/12/git-and-github-documentation.html</link>
      <pubDate>Sun, 08 Dec 2024 02:40:00 +0600</pubDate>
      <guid>//localhost:1313/2024/12/git-and-github-documentation.html</guid>
      <description>&lt;h2 id=&#34;installation-and-setup&#34;&gt;Installation and Setup&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Download Git&lt;/strong&gt;&lt;br&gt;
Visit &lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;Git Downloads&lt;/a&gt; and install Git on your system.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Set Up Your Identity&lt;/strong&gt;&lt;br&gt;
Configure your user name and email:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;

`git config --global user.name &amp;#34;Your Name&amp;#34; git config --global user.email &amp;#34;your_email@example.com&amp;#34;`
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;To configure these settings only for the current repository, omit the &lt;code&gt;--global&lt;/code&gt; flag:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;

`git config user.name &amp;#34;Your Name&amp;#34; git config user.email &amp;#34;your_email@example.com&amp;#34;`
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Check Current Configuration&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;

`git config --global user.name git config --global user.email`
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;repository-setup&#34;&gt;Repository Setup&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Initialize a Repository&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
